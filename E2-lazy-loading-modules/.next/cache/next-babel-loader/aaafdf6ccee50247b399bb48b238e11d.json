{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport loadDB from '../lib/load-db';\n\nfunction PostLink(props) {\n  return React.createElement(\"li\", null, React.createElement(Link, {\n    as: \"/p/\".concat(props.id),\n    href: \"/post?id=\".concat(props.id)\n  }, React.createElement(\"a\", null, props.title)));\n}\n\nfunction Index(_ref) {\n  var stories = _ref.stories;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, \"Hacker News - Latest\"), React.createElement(\"ul\", null, stories.map(function (story) {\n    return React.createElement(PostLink, {\n      key: story.id,\n      id: story.id,\n      title: story.title\n    });\n  })));\n}\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var db, ids, stories;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return loadDB();\n\n        case 2:\n          db = _context.sent;\n          _context.next = 5;\n          return db.child('topstories').once('value');\n\n        case 5:\n          ids = _context.sent;\n          _context.next = 8;\n          return _Promise.all(ids.val().slice(0, 10).map(function (id) {\n            return db.child('item').child(id).once('value');\n          }));\n\n        case 8:\n          stories = _context.sent;\n          stories = stories.map(function (s) {\n            return s.val();\n          });\n          return _context.abrupt(\"return\", {\n            stories: stories\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["D:\\gitTest\\next-learn-demo\\E2-lazy-loading-modules\\pages\\index.js"],"names":["Layout","Link","loadDB","PostLink","props","id","title","Index","stories","map","story","getInitialProps","db","child","once","ids","all","val","slice","s"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SACE,gCACE,oBAAC,IAAD;AAAM,IAAA,EAAE,eAAQA,KAAK,CAACC,EAAd,CAAR;AAA4B,IAAA,IAAI,qBAAcD,KAAK,CAACC,EAApB;AAAhC,KACE,+BAAID,KAAK,CAACE,KAAV,CADF,CADF,CADF;AAOD;;AAED,SAASC,KAAT,OAA4B;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC1B,SACE,oBAAC,MAAD,QACE,uDADF,EAEE,gCACGA,OAAO,CAACC,GAAR,CAAY,UAAAC,KAAK;AAAA,WAChB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAK,CAACL,EAArB;AAAyB,MAAA,EAAE,EAAEK,KAAK,CAACL,EAAnC;AAAuC,MAAA,KAAK,EAAEK,KAAK,CAACJ;AAApD,MADgB;AAAA,GAAjB,CADH,CAFF,CADF;AAUD;;AAEDC,KAAK,CAACI,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACLT,MAAM,EADD;;AAAA;AAChBU,UAAAA,EADgB;AAAA;AAAA,iBAGJA,EAAE,CAACC,KAAH,CAAS,YAAT,EAAuBC,IAAvB,CAA4B,OAA5B,CAHI;;AAAA;AAGhBC,UAAAA,GAHgB;AAAA;AAAA,iBAIF,SAAQC,GAAR,CAClBD,GAAG,CACAE,GADH,GAEGC,KAFH,CAES,CAFT,EAEY,EAFZ,EAGGT,GAHH,CAGO,UAAAJ,EAAE;AAAA,mBACLO,EAAE,CACCC,KADH,CACS,MADT,EAEGA,KAFH,CAESR,EAFT,EAGGS,IAHH,CAGQ,OAHR,CADK;AAAA,WAHT,CADkB,CAJE;;AAAA;AAIlBN,UAAAA,OAJkB;AAgBtBA,UAAAA,OAAO,GAAGA,OAAO,CAACC,GAAR,CAAY,UAAAU,CAAC;AAAA,mBAAIA,CAAC,CAACF,GAAF,EAAJ;AAAA,WAAb,CAAV;AAhBsB,2CAkBf;AAAET,YAAAA,OAAO,EAAPA;AAAF,WAlBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAqBA,eAAeD,KAAf","sourcesContent":["import Layout from '../components/MyLayout.js'\r\nimport Link from 'next/link'\r\nimport loadDB from '../lib/load-db'\r\n\r\nfunction PostLink(props) {\r\n  return (\r\n    <li>\r\n      <Link as={`/p/${props.id}`} href={`/post?id=${props.id}`}>\r\n        <a>{props.title}</a>\r\n      </Link>\r\n    </li>\r\n  )\r\n}\r\n\r\nfunction Index({ stories }) {\r\n  return (\r\n    <Layout>\r\n      <h1>Hacker News - Latest</h1>\r\n      <ul>\r\n        {stories.map(story => (\r\n          <PostLink key={story.id} id={story.id} title={story.title} />\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nIndex.getInitialProps = async function() {\r\n  const db = await loadDB()\r\n\r\n  const ids = await db.child('topstories').once('value')\r\n  let stories = await Promise.all(\r\n    ids\r\n      .val()\r\n      .slice(0, 10)\r\n      .map(id =>\r\n        db\r\n          .child('item')\r\n          .child(id)\r\n          .once('value')\r\n      )\r\n  )\r\n\r\n  stories = stories.map(s => s.val())\r\n\r\n  return { stories }\r\n}\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}