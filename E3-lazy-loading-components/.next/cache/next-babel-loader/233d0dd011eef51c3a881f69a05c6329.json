{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\gitTest\\\\next-learn-demo\\\\E3-lazy-loading-components\\\\lib\\\\with-post.js\";\nimport React from 'react';\nimport MyLayout from '../components/MyLayout';\nimport marked from 'marked'; // import Highlight from 'react-highlight'\n\nimport dynamic from 'next/dynamic';\nvar Highlight = dynamic(function () {\n  return import('react-highlight');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-highlight')];\n    },\n    modules: ['react-highlight']\n  }\n});\nmarked.setOptions({\n  gfm: true,\n  tables: true,\n  breaks: true\n});\nexport default function WithPost(options) {\n  return (\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(PostPage, _React$Component);\n\n      function PostPage() {\n        _classCallCheck(this, PostPage);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(PostPage).apply(this, arguments));\n      }\n\n      _createClass(PostPage, [{\n        key: \"renderMarkdown\",\n        value: function renderMarkdown() {\n          // If a code snippet contains in the markdown content\n          // then use Highlight component\n          if (/~~~/.test(options.content)) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, React.createElement(Highlight, {\n              innerHTML: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22\n              },\n              __self: this\n            }, marked(options.content)));\n          } // If not, simply render the generated HTML from markdown\n\n\n          return React.createElement(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: marked(options.content)\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return React.createElement(MyLayout, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, options.title), this.renderMarkdown());\n        }\n      }]);\n\n      return PostPage;\n    }(React.Component)\n  );\n}","map":{"version":3,"sources":["D:\\gitTest\\next-learn-demo\\E3-lazy-loading-components\\lib\\with-post.js"],"names":["React","MyLayout","marked","dynamic","Highlight","setOptions","gfm","tables","breaks","WithPost","options","test","content","__html","title","renderMarkdown","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,IAAMC,SAAS,GAAGD,OAAO;AAAA,SAAC,OAAO,iBAAP,CAAD;AAAA;AAAA;AAAA;AAAA,kCAAQ,iBAAR;AAAA;AAAA,cAAQ,iBAAR;AAAA;AAAA,EAAzB;AACAD,MAAM,CAACG,UAAP,CAAkB;AAChBC,EAAAA,GAAG,EAAE,IADW;AAEhBC,EAAAA,MAAM,EAAE,IAFQ;AAGhBC,EAAAA,MAAM,EAAE;AAHQ,CAAlB;AAMA,eAAe,SAASC,QAAT,CAAmBC,OAAnB,EAA4B;AACzC;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,yCACoB;AAChB;AACA;AACA,cAAI,MAAMC,IAAN,CAAWD,OAAO,CAACE,OAAnB,CAAJ,EAAiC;AAC/B,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,oBAAC,SAAD;AAAW,cAAA,SAAS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGV,MAAM,CAACQ,OAAO,CAACE,OAAT,CADT,CADF,CADF;AAOD,WAXe,CAYhB;;;AACA,iBACE;AACE,YAAA,uBAAuB,EAAE;AAACC,cAAAA,MAAM,EAAEX,MAAM,CAACQ,OAAO,CAACE,OAAT;AAAf,aAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AAnBH;AAAA;AAAA,iCAqBY;AACR,iBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKF,OAAO,CAACI,KAAb,CADF,EAEI,KAAKC,cAAL,EAFJ,CADF;AAMD;AA5BH;;AAAA;AAAA,MAA8Bf,KAAK,CAACgB,SAApC;AAAA;AA8BD","sourcesContent":["import React from 'react'\r\nimport MyLayout from '../components/MyLayout'\r\nimport marked from 'marked'\r\n// import Highlight from 'react-highlight'\r\nimport dynamic from 'next/dynamic'\r\n\r\nconst Highlight = dynamic(import('react-highlight'))\r\nmarked.setOptions({\r\n  gfm: true,\r\n  tables: true,\r\n  breaks: true\r\n})\r\n\r\nexport default function WithPost (options) {\r\n  return class PostPage extends React.Component {\r\n    renderMarkdown () {\r\n      // If a code snippet contains in the markdown content\r\n      // then use Highlight component\r\n      if (/~~~/.test(options.content)) {\r\n        return (\r\n          <div>\r\n            <Highlight innerHTML>\r\n              {marked(options.content)}\r\n            </Highlight>\r\n          </div>\r\n        )\r\n      }\r\n      // If not, simply render the generated HTML from markdown\r\n      return (\r\n        <div\r\n          dangerouslySetInnerHTML={{__html: marked(options.content)}}\r\n        />\r\n      )\r\n    }\r\n\r\n    render () {\r\n      return (\r\n        <MyLayout>\r\n          <h1>{options.title}</h1>\r\n          { this.renderMarkdown() }\r\n        </MyLayout>\r\n      )\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}